{"version":3,"file":"static/js/593.05540cfd.chunk.js","mappings":"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","sources":["Services/Api.jsx","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Text/Text.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3fd15b48446eede94fd21b39e1e3acac';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst BASE_URL2 = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_URL3 = 'https://api.themoviedb.org/3/movie/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL2}?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCastOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getReviewsOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n","import PropTypes from 'prop-types';\n\nconst MoviesItem = ({ id, title }) => {\n  return (\n    <>\n      <li id={id}>{title}</li>\n    </>\n  );\n};\n\nexport default MoviesItem;\n\nMoviesItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-left: 20px;\n  display: flex;\n  flex-direction: column;\n  column-gap: 20px;\n  font-size: 18px;\n  line-height: 1.33;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n// import { useState, useEffect } from 'react';\nimport MoviesItem from 'components/MoviesItem/MoviesItem';\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  // console.log(location);\n  return (\n    <List>\n      {movies &&\n        movies.map(({ title, id }) => {\n          return (\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <MoviesItem id={id} title={title} key={id} />\n            </Link>\n          );\n        })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  margin-top: 20px;\n  padding-left: 10px;\n  color: red;\n  font-size: 18px;\n  line-height: 1.33;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-top: 30px;\n  padding-left: 20px;\n  font-size: 16px;\n  line-height: 1;\n`;\n\nexport const InputForm = styled.input`\n  padding: 10px 6px;\n  border-radius: 8px;\n  width: 300px;\n  border: 1px solid brown;\n  margin-right: 16px;\n`;\nexport const BtnForm = styled.button`\n  width: 100px;\n  padding: 6px 6px;\n  border-radius: 8px;\n  cursor: pointer;\n  background-color: white;\n`;\n","import { useState } from 'react';\nimport { Form, InputForm, BtnForm } from './SearchForm.styled';\n\nconst SearchForm = ({ onSearchMovie, setSearchParams }) => {\n  const [query, setQuery] = useState('');\n  // const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = ({ target: { value } }) => {\n    setQuery(value.toLowerCase().trim());\n    setSearchParams({ query: value });\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n\n    if (query === '') {\n      return alert('Enter a search name');\n    }\n    onSearchMovie(query);\n    setQuery('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmitForm}>\n      <InputForm\n        type=\"text\"\n        autoComplete=\"off\"\n        onChange={handleChange}\n        value={query}\n      />\n      <BtnForm type=\"submit\">Search</BtnForm>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'Services/Api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { Text } from 'components/Text/Text.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState(() => searchParams.get('query') ?? '');\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [error, setError] = useState(null);\n\n  // console.log(searchParams.get('query'));\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const getMoviesBySearchQuery = async query => {\n      try {\n        const { results } = await getMoviesByQuery(query);\n\n        if (results.length === 0) {\n          setIsEmpty(true);\n        } else {\n          setIsEmpty(false);\n        }\n        setMovies(results);\n        setError(null);\n      } catch (error) {\n        setError(error.message || error.code);\n      }\n    };\n    getMoviesBySearchQuery(query);\n  }, [query]);\n\n  const handleSearchMovie = searchName => {\n    setQuery(searchName);\n  };\n\n  return (\n    <>\n      <SearchForm\n        onSearchMovie={handleSearchMovie}\n        setSearchParams={setSearchParams}\n      />\n      {error && <Text>Ups... Something went wrong - {error}!</Text>}\n      {isEmpty ? (\n        <Text>\n          Sorry. We didn`t find nothing by your search query, try again!\n        </Text>\n      ) : (\n        <MoviesList movies={movies} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL3","getTrendingMovies","axios","data","getMoviesByQuery","query","getMovieById","movie_id","getCastOfMovie","getReviewsOfMovie","id","title","List","styled","movies","location","useLocation","map","to","state","from","Text","Form","InputForm","BtnForm","onSearchMovie","setSearchParams","useState","setQuery","onSubmit","e","preventDefault","alert","type","autoComplete","onChange","value","target","toLowerCase","trim","useSearchParams","searchParams","setMovies","get","isEmpty","setIsEmpty","error","setError","useEffect","getMoviesBySearchQuery","results","length","message","code","searchName","MoviesList"],"sourceRoot":""}