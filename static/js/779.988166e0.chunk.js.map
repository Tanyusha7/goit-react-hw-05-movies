{"version":3,"file":"static/js/779.988166e0.chunk.js","mappings":"8SAEMA,EAAU,mCAGVC,EAAY,sCAELC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UALR,kDAKQ,oBAAiCH,IADzB,uBACvBI,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UATP,4CASO,kBACCG,EADD,oBACkBN,IAFX,uBACtBI,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBG,EAAY,mCAAG,WAAMC,GAAN,yFACHL,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OACNO,EADM,oBACcR,EADd,oBADG,uBAClBI,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OACNO,EADM,4BACsBR,IAFjB,uBACpBI,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OACNO,EADM,4BACsBR,IAFd,uBACvBI,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD,qEC/BjBO,E,OAAYC,EAAAA,IAAH,gE,sKCATC,EAAiBD,EAAAA,EAAAA,QAAH,iDAIdE,EAAcF,EAAAA,EAAAA,IAAH,8CAIXG,EAAcH,EAAAA,EAAAA,IAAH,6J,kBC4CxB,EA/CgB,WACd,IAAQJ,GAAaQ,EAAAA,EAAAA,MAAbR,SACR,GAA0BS,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAMf,GAAN,qFAEZA,EAFY,kEAKSE,EAAAA,EAAAA,IAAkBF,GAL3B,gBAKTgB,EALS,EAKTA,QAERL,EAASK,GAPQ,kDASjBH,EAAS,KAAMI,SATE,0DAAH,sDAalBF,EAAaf,EACd,GAAE,CAACA,KAGF,SAACK,EAAD,WACE,SAAC,IAAD,WACE,UAACC,EAAD,WACGM,IAAS,UAAC,IAAD,4CAAqCA,EAArC,OACTF,EAAMQ,OAAS,EACdR,EAAMS,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACnB,OACE,UAACd,EAAD,YACE,qCACU,0BAAOa,QAEjB,uBAAIC,MAJYD,EAOrB,KAED,SAAC,IAAD,8DAMX,C,qEClDYE,E,OAAOlB,EAAAA,EAAH,4H","sources":["Services/Api.jsx","components/Container/Container.styled.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/Text/Text.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3fd15b48446eede94fd21b39e1e3acac';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst BASE_URL2 = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_URL3 = 'https://api.themoviedb.org/3/movie/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL2}?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCastOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getReviewsOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 1200px;\n  padding: 10px 20px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ReviewsSection = styled.section`\n  padding-bottom: 20px;\n`;\n\nexport const ReviewsList = styled.div`\n  margin: 20px 25px;\n`;\n\nexport const ReviewsItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 25px;\n\n  &:last-child {\n    margin-bottom: 0px;\n  }\n`;\n","import { getReviewsOfMovie } from 'Services/Api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Text } from 'components/Text/Text.styled';\nimport { ReviewsSection, ReviewsList, ReviewsItem } from './Reviews.styled';\nimport { Container } from 'components/Container/Container.styled';\n\nconst Reviews = () => {\n  const { movie_id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const movieReviews = async movie_id => {\n      try {\n        if (!movie_id) {\n          return;\n        }\n        const { results } = await getReviewsOfMovie(movie_id);\n        // console.log(results);\n        setMovie(results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    movieReviews(movie_id);\n  }, [movie_id]);\n\n  return (\n    <ReviewsSection>\n      <Container>\n        <ReviewsList>\n          {error && <Text>Ups... Something went wrong - {error}!</Text>}\n          {movie.length > 0 ? (\n            movie.map(({ author, content }) => {\n              return (\n                <ReviewsItem key={author}>\n                  <b>\n                    Author: <span>{author}</span>\n                  </b>\n                  <p>{content}</p>\n                </ReviewsItem>\n              );\n            })\n          ) : (\n            <Text>We don`t have any reviews for this movie!</Text>\n          )}\n        </ReviewsList>\n      </Container>\n    </ReviewsSection>\n  );\n};\n\nexport default Reviews;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  margin-top: 20px;\n  padding-left: 10px;\n  color: red;\n  font-size: 18px;\n  line-height: 1.33;\n`;\n"],"names":["API_KEY","BASE_URL3","getTrendingMovies","axios","data","getMoviesByQuery","query","getMovieById","movie_id","getCastOfMovie","getReviewsOfMovie","Container","styled","ReviewsSection","ReviewsList","ReviewsItem","useParams","useState","movie","setMovie","error","setError","useEffect","movieReviews","results","message","length","map","author","content","Text"],"sourceRoot":""}