{"version":3,"file":"static/js/427.675511db.chunk.js","mappings":"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","sources":["Services/Api.jsx","components/Container/Container.styled.js","components/Link/Link.styled.js","components/Text/Text.styled.js","components/MovieDetails/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3fd15b48446eede94fd21b39e1e3acac';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst BASE_URL2 = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_URL3 = 'https://api.themoviedb.org/3/movie/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL2}?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCastOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getReviewsOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 1200px;\n  padding: 10px 20px;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const LinkInfo = styled(Link)`\n  color: darkblue;\n  &:hover {\n    color: blue;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  margin-top: 20px;\n  padding-left: 10px;\n  color: red;\n  font-size: 18px;\n  line-height: 1.33;\n`;\n","import styled from '@emotion/styled';\n\nexport const MovieSection = styled.section`\n  padding: 20px 0;\n`;\n\nexport const BtnBack = styled.button`\n  display: flex;\n  column-gap: 10px;\n  margin-bottom: 20px;\n  padding: 6px 4px;\n  width: 100px;\n  justify-content: space-around;\n  background: transparent;\n  border-radius: 8px;\n  cursor: pointer;\n`;\n\nexport const MovieDesc = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const MovieCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 10px;\n`;\n\nexport const Genreslist = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const AddInfoSection = styled.section`\n  padding: 25px 0;\n  border-bottom: 1px solid darkblue;\n  border-top: 1px solid darkblue;\n`;\n\nexport const AddInfoList = styled.ul`\n  margin-left: 30px;\n  font-size: 16px;\n`;\n\nexport const AddInfoText = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const AddInfoItem = styled.li`\n  &:last-child {\n    margin-top: 10px;\n  }\n`;\n","import { getMovieById } from 'Services/Api';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Text } from 'components/Text/Text.styled';\nimport { LinkInfo } from 'components/Link/Link.styled';\nimport {\n  MovieSection,\n  BtnBack,\n  Genreslist,\n  MovieDesc,\n  MovieCont,\n  AddInfoSection,\n  AddInfoItem,\n  AddInfoList,\n  AddInfoText,\n} from '../components/MovieDetails/MovieDetails.styled';\nimport { Container } from 'components/Container/Container.styled';\n\nconst MovieDetails = () => {\n  const { movie_id } = useParams();\n\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/movies');\n\n  const defaultImg =\n    'https://breakthrough.org/wp-content/uploads/2018/10/default-placeholder-image.png';\n\n  useEffect(() => {\n    getMovieId(movie_id);\n  }, [movie_id]);\n\n  const getMovieId = async movie_id => {\n    if (!movie_id) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const movie = await getMovieById(movie_id);\n\n      setMovieDetails(movie);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.code);\n    }\n  };\n\n  return (\n    <>\n      <MovieSection>\n        <Container>\n          {isLoading && (\n            <ThreeDots\n              height=\"10\"\n              width=\"300\"\n              radius=\"9\"\n              color=\"#370f9b\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClassName=\"\"\n              visible={true}\n            />\n          )}\n          {error && <Text>Ups... Something went wrong - {error}!</Text>}\n          <BtnBack type=\"button\">\n            <LinkInfo to={backLocationRef.current}>\n              <BsArrowLeft />\n              Go back\n            </LinkInfo>\n          </BtnBack>\n          <MovieDesc>\n            <div>\n              <img\n                src={\n                  movieDetails.poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`\n                    : defaultImg\n                }\n                alt={movieDetails.title}\n                width=\"300\"\n                height=\"400\"\n              />\n            </div>\n            <MovieCont>\n              <h2>\n                {movieDetails.title}\n                <span>\n                  (\n                  {movieDetails.release_date &&\n                    movieDetails.release_date.slice(0, 4)}\n                  )\n                </span>\n              </h2>\n              <p>\n                User score:\n                <span> {Math.round(movieDetails.vote_average * 10)}%</span>\n              </p>\n              <b>Overview</b>\n              <p>{movieDetails.overview}</p>\n              <b>Genres</b>\n              <Genreslist>\n                {movieDetails.genres &&\n                  movieDetails.genres.map((genre, index) => {\n                    return <p key={index}>{genre.name}</p>;\n                  })}\n              </Genreslist>\n            </MovieCont>\n          </MovieDesc>\n        </Container>\n      </MovieSection>\n\n      <AddInfoSection>\n        <Container>\n          <AddInfoList>\n            <AddInfoText>Additional information</AddInfoText>\n            <AddInfoItem>\n              <LinkInfo to={`credits`}>Cast</LinkInfo>\n            </AddInfoItem>\n            <AddInfoItem>\n              <LinkInfo to={`reviews`}>Reviews</LinkInfo>\n            </AddInfoItem>\n          </AddInfoList>\n        </Container>\n      </AddInfoSection>\n\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL3","getTrendingMovies","axios","data","getMoviesByQuery","query","getMovieById","movie_id","getCastOfMovie","getReviewsOfMovie","Container","styled","LinkInfo","Link","Text","MovieSection","BtnBack","MovieDesc","MovieCont","Genreslist","AddInfoSection","AddInfoList","AddInfoText","AddInfoItem","useParams","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","error","setError","location","useLocation","backLocationRef","useRef","state","from","useEffect","getMovieId","movie","code","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","type","to","current","src","poster_path","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","index","name","Suspense"],"sourceRoot":""}