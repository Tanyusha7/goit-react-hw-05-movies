{"version":3,"file":"static/js/375.c26f4098.chunk.js","mappings":"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","sources":["Services/Api.jsx","components/Container/Container.styled.js","components/Link/Link.styled.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","components/Text/Text.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3fd15b48446eede94fd21b39e1e3acac';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst BASE_URL2 = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_URL3 = 'https://api.themoviedb.org/3/movie/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL2}?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCastOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getReviewsOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 1200px;\n  padding: 10px 20px;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const LinkInfo = styled(Link)`\n  color: darkblue;\n  &:hover {\n    color: blue;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const MovieSection = styled.section`\n  padding: 20px 0;\n`;\n\nexport const BtnBack = styled.button`\n  display: flex;\n  column-gap: 10px;\n  margin-bottom: 20px;\n  padding: 6px 4px;\n  width: 100px;\n  justify-content: space-around;\n  background: transparent;\n  border-radius: 8px;\n  cursor: pointer;\n`;\n\nexport const MovieDesc = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const MovieCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 10px;\n`;\n\nexport const Genreslist = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const AddInfoSection = styled.section`\n  padding: 25px 0;\n  border-bottom: 1px solid darkblue;\n  border-top: 1px solid darkblue;\n`;\n\nexport const AddInfoList = styled.ul`\n  margin-left: 30px;\n  font-size: 16px;\n`;\n\nexport const AddInfoText = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const AddInfoItem = styled.li`\n  &:last-child {\n    margin-top: 10px;\n  }\n`;\n","import { getMovieById } from 'Services/Api';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { Text } from 'components/Text/Text.styled';\nimport { LinkInfo } from 'components/Link/Link.styled';\nimport {\n  MovieSection,\n  BtnBack,\n  Genreslist,\n  MovieDesc,\n  MovieCont,\n  AddInfoSection,\n  AddInfoItem,\n  AddInfoList,\n  AddInfoText,\n} from './MovieDetails.styled';\nimport { Container } from 'components/Container/Container.styled';\n\nconst MovieDetails = () => {\n  const { movie_id } = useParams();\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [overview, setOverview] = useState('');\n  const [year, setYear] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [score, setScore] = useState(null);\n\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/movies');\n\n  const defaultImg =\n    'https://breakthrough.org/wp-content/uploads/2018/10/default-placeholder-image.png';\n\n  useEffect(() => {\n    getMovieId(movie_id);\n  }, [movie_id]);\n\n  const getMovieId = async movie_id => {\n    if (!movie_id) {\n      return;\n    }\n    try {\n      const {\n        poster_path,\n        title,\n        overview,\n        genres,\n        release_date,\n        vote_average,\n      } = await getMovieById(movie_id);\n\n      setImage(poster_path);\n      setTitle(title);\n      setOverview(overview);\n      setYear(release_date.slice(0, 4));\n      setGenres(genres);\n      setScore(Math.round(vote_average * 10));\n    } catch (error) {\n      setError(error.code);\n    }\n  };\n\n  const genreName = genres.flatMap(genre => genre.name);\n\n  return (\n    <>\n      <MovieSection>\n        <Container>\n          {error && <Text>Ups... Something went wrong - {error}!</Text>}\n          <BtnBack type=\"button\">\n            <LinkInfo to={backLocationRef.current}>\n              <BsArrowLeft />\n              Go back\n            </LinkInfo>\n          </BtnBack>\n          <MovieDesc>\n            <div>\n              <img\n                src={\n                  image\n                    ? `https://image.tmdb.org/t/p/w500/${image}`\n                    : defaultImg\n                }\n                alt={title}\n                width=\"300\"\n                height=\"400\"\n              />\n            </div>\n            <MovieCont>\n              <h2>\n                {title}\n                <span> ({year})</span>\n              </h2>\n              <p>\n                User score: <span>{score}%</span>\n              </p>\n              <b>Overview</b>\n              <p>{overview}</p>\n              <b>Genres</b>\n              <Genreslist>\n                {genres &&\n                  genreName.map((name, index) => {\n                    return <p key={index}>{name}</p>;\n                  })}\n              </Genreslist>\n            </MovieCont>\n          </MovieDesc>\n        </Container>\n      </MovieSection>\n\n      <AddInfoSection>\n        <Container>\n          <AddInfoList>\n            <AddInfoText>Additional information</AddInfoText>\n            <AddInfoItem>\n              <LinkInfo to={`credits`}>Cast</LinkInfo>\n            </AddInfoItem>\n            <AddInfoItem>\n              <LinkInfo to={`reviews`}>Reviews</LinkInfo>\n            </AddInfoItem>\n          </AddInfoList>\n        </Container>\n      </AddInfoSection>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  margin-top: 20px;\n  padding-left: 10px;\n  color: red;\n  font-size: 18px;\n  line-height: 1.33;\n`;\n"],"names":["API_KEY","BASE_URL3","getTrendingMovies","axios","data","getMoviesByQuery","query","getMovieById","movie_id","getCastOfMovie","getReviewsOfMovie","Container","styled","LinkInfo","Link","MovieSection","BtnBack","MovieDesc","MovieCont","Genreslist","AddInfoSection","AddInfoList","AddInfoText","AddInfoItem","useParams","useState","image","setImage","title","setTitle","overview","setOverview","year","setYear","genres","setGenres","score","setScore","error","setError","location","useLocation","backLocationRef","useRef","state","from","useEffect","getMovieId","poster_path","release_date","vote_average","slice","Math","round","code","genreName","flatMap","genre","name","type","to","current","src","alt","width","height","map","index","Suspense","fallback","Text"],"sourceRoot":""}