{"version":3,"file":"static/js/947.f20e130e.chunk.js","mappings":"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","sources":["Services/Api.jsx","components/MovieDetails/MovieDetails.jsx","components/Text/Text.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3fd15b48446eede94fd21b39e1e3acac';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst BASE_URL2 = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_URL3 = 'https://api.themoviedb.org/3/movie/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL2}?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCastOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getReviewsOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n","import { getMovieById } from 'Services/Api';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { Text } from 'components/Text/Text.styled';\n\nconst MovieDetails = () => {\n  const { movie_id } = useParams();\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [overview, setOverview] = useState('');\n  const [year, setYear] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [score, setScore] = useState(null);\n\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/movies');\n\n  const defaultImg =\n    'https://breakthrough.org/wp-content/uploads/2018/10/default-placeholder-image.png';\n\n  useEffect(() => {\n    // if (!movie_id) {\n    //   return;\n    // }\n\n    getMovieId(movie_id);\n  }, [movie_id]);\n\n  const getMovieId = async movie_id => {\n    if (!movie_id) {\n      return;\n    }\n    try {\n      const {\n        poster_path,\n        title,\n        overview,\n        genres,\n        release_date,\n        vote_average,\n      } = await getMovieById(movie_id);\n\n      setImage(poster_path);\n      setTitle(title);\n      setOverview(overview);\n      setYear(release_date.slice(0, 4));\n      setGenres(genres);\n      setScore(Math.round(vote_average * 10));\n    } catch (error) {\n      setError(error.code);\n    }\n  };\n\n  const genreName = genres.flatMap(genre => genre.name);\n\n  return (\n    <>\n      {error && <Text>Ups... Something went wrong - {error}!</Text>}\n      <Link to={backLocationRef.current}>\n        <button type=\"button\">\n          <BsArrowLeft />\n          Go Back\n        </button>\n      </Link>\n      <div>\n        <img\n          src={image ? `https://image.tmdb.org/t/p/w500/${image}` : defaultImg}\n          alt={title}\n          width=\"300\"\n          height=\"400\"\n        />\n      </div>\n      <div>\n        <h2>\n          {title}\n          <span> ({year})</span>\n        </h2>\n        <p>\n          User score: <span>{score}%</span>\n        </p>\n        <p>Overview</p>\n        <p>{overview}</p>\n        <p>Genres</p>\n        {genres &&\n          genreName.map(name => {\n            return <p>{name}</p>;\n          })}\n      </div>\n      <div>\n        <p>Additional information</p>\n        <Link to={`credits`}>\n          <div>Cast</div>\n        </Link>\n        <Link to={`reviews`}>\n          <div>Reviews</div>\n        </Link>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  margin-top: 20px;\n  padding-left: 10px;\n  color: red;\n  font-size: 18px;\n  line-height: 1.33;\n`;\n"],"names":["API_KEY","BASE_URL3","getTrendingMovies","axios","data","getMoviesByQuery","query","getMovieById","movie_id","getCastOfMovie","getReviewsOfMovie","useParams","useState","image","setImage","title","setTitle","overview","setOverview","year","setYear","genres","setGenres","score","setScore","error","setError","location","useLocation","backLocationRef","useRef","state","from","useEffect","getMovieId","poster_path","release_date","vote_average","slice","Math","round","code","genreName","flatMap","genre","name","to","current","type","src","alt","width","height","map","Suspense","fallback","Text","styled"],"sourceRoot":""}