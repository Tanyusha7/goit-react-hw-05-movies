{"version":3,"file":"static/js/983.fa735d15.chunk.js","mappings":"8SAEMA,EAAU,mCAGVC,EAAY,sCAELC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UALR,kDAKQ,oBAAiCH,IADzB,uBACvBI,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UATP,4CASO,kBACCG,EADD,oBACkBN,IAFX,uBACtBI,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBG,EAAY,mCAAG,WAAMC,GAAN,yFACHL,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OACNO,EADM,oBACcR,EADd,oBADG,uBAClBI,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OACNO,EADM,4BACsBR,IAFjB,uBACpBI,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OACNO,EADM,4BACsBR,IAFd,uBACvBI,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD,sFCvB9B,EARmB,SAAC,GAAmB,IAAjBO,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACxB,OACE,+BACE,eAAID,GAAIA,EAAR,SAAaC,KAGlB,E,SCNYC,E,OAAOC,EAAAA,GAAH,2JCqBjB,EAjBmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,UACGE,GACCA,EAAOG,KAAI,YAAoB,IAAjBN,EAAgB,EAAhBA,MAAOD,EAAS,EAATA,GACnB,OACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaR,GAAMS,MAAO,CAAEC,KAAML,GAA1C,UACE,SAAC,EAAD,CAAYL,GAAIA,EAAIC,MAAOA,GAAYD,IAG5C,KAGR,C,qECnBYW,E,OAAOR,EAAAA,EAAH,4H,iHCgCjB,UA7BiB,WACf,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,GAID,GAAE,IAEH,IAAMA,EAAS,mCAAG,gHAEY1B,EAAAA,EAAAA,MAFZ,gBAEN2B,EAFM,EAENA,QAERL,EAAUK,GAJI,gDAMdH,EAAS,KAAMI,SAND,yDAAH,qDAUf,OACE,gCACGL,IAAS,UAAC,IAAD,4CAAqCA,EAArC,QACV,SAAC,IAAD,CAAYV,OAAQA,MAGzB,C","sources":["Services/Api.jsx","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Text/Text.styled.js","pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3fd15b48446eede94fd21b39e1e3acac';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst BASE_URL2 = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_URL3 = 'https://api.themoviedb.org/3/movie/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL2}?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCastOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getReviewsOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n","import PropTypes from 'prop-types';\n\nconst MoviesItem = ({ id, title }) => {\n  return (\n    <>\n      <li id={id}>{title}</li>\n    </>\n  );\n};\n\nexport default MoviesItem;\n\nMoviesItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-left: 20px;\n  display: flex;\n  flex-direction: column;\n  column-gap: 20px;\n  font-size: 18px;\n  line-height: 1.33;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n// import { useState, useEffect } from 'react';\nimport MoviesItem from 'components/MoviesItem/MoviesItem';\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  // console.log(location);\n  return (\n    <List>\n      {movies &&\n        movies.map(({ title, id }) => {\n          return (\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <MoviesItem id={id} title={title} key={id} />\n            </Link>\n          );\n        })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  margin-top: 20px;\n  padding-left: 10px;\n  color: red;\n  font-size: 18px;\n  line-height: 1.33;\n`;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { getTrendingMovies } from 'Services/Api';\nimport { useState, useEffect } from 'react';\nimport { Text } from 'components/Text/Text.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getMovies();\n    // return () => {\n    //   effect\n    // };\n  }, []);\n\n  const getMovies = async () => {\n    try {\n      const { results } = await getTrendingMovies();\n\n      setMovies(results);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      {error && <Text>Ups... Something went wrong - {error}!</Text>}\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["API_KEY","BASE_URL3","getTrendingMovies","axios","data","getMoviesByQuery","query","getMovieById","movie_id","getCastOfMovie","getReviewsOfMovie","id","title","List","styled","movies","location","useLocation","map","to","state","from","Text","useState","setMovies","error","setError","useEffect","getMovies","results","message"],"sourceRoot":""}