{"version":3,"file":"static/js/387.09bb0b17.chunk.js","mappings":"mTAEMA,EAAU,mCAGVC,EAAY,sCAELC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UALR,kDAKQ,oBAAiCH,IADzB,uBACvBI,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UATP,4CASO,kBACCG,EADD,oBACkBN,IAFX,uBACtBI,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBG,EAAY,mCAAG,WAAMC,GAAN,yFACHL,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OACNO,EADM,oBACcR,EADd,oBADG,uBAClBI,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OACNO,EADM,4BACsBR,IAFjB,uBACpBI,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OACNO,EADM,4BACsBR,IAFd,uBACvBI,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD,wLC/BjBO,EAAWC,EAAAA,EAAAA,GAAH,0JAQRC,EAAWD,EAAAA,EAAAA,GAAH,sF,mBC2ErB,EA7Ea,WACX,IAAQJ,GAAaM,EAAAA,EAAAA,MAAbN,SACR,GAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,MAKAC,EAAAA,EAAAA,YAAU,WACHd,GAGLe,EAAYf,EACb,GAAE,CAACA,IAEJ,IAAMe,EAAW,mCAAG,WAAMf,GAAN,4EACbA,EADa,wDAKlBa,GAAa,GALK,mBAOOZ,EAAAA,EAAAA,IAAeD,GAPtB,gBAORQ,EAPQ,EAORA,KAERC,EAAQD,GACRK,GAAa,GAVG,kDAYhBF,EAAS,KAAMK,SACfC,QAAQC,IAAI,KAAMF,SAbF,0DAAH,sDAgBjB,OACE,SAAC,IAAD,WACE,UAACb,EAAD,WACGS,IACC,SAAC,KAAD,CACEO,OAAO,KACPC,MAAM,MACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,IAGZhB,IAAS,UAAC,IAAD,WAAM,iCAA+BA,EAAM,OACpDF,EAAKmB,OAAS,EACbnB,EAAKoB,KAAI,WAAoCC,GAAW,IAA5CC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UAC9B,OACE,UAAC3B,EAAD,YACE,gBACE4B,IACEH,EAAY,yCAC0BA,GAhDtD,iFAmDcI,IAAKH,EACLX,MAAM,MACND,OAAO,SAET,uBAAIY,KACJ,yBAAG,eACU,4BAAM,IAAEC,UAbRH,EAiBlB,KAED,SAAC,IAAD,UAAM,gDAKf,C,sECjFYM,E,QAAY/B,EAAAA,IAAH,gE,sECATgC,E,QAAOhC,EAAAA,EAAH,4H","sources":["Services/Api.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Container/Container.styled.js","components/Text/Text.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3fd15b48446eede94fd21b39e1e3acac';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst BASE_URL2 = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_URL3 = 'https://api.themoviedb.org/3/movie/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL2}?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCastOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getReviewsOfMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL3}${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 25px;\n  margin-left: 30px;\n  margin-top: 20px;\n  margin-bottom: 15px;\n`;\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  row-gap: 3px;\n`;\n","import { getCastOfMovie } from 'Services/Api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Text } from 'components/Text/Text.styled';\nimport { CastItem, CastList } from './Cast.styled';\nimport { Container } from '../Container/Container.styled';\n\nconst Cast = () => {\n  const { movie_id } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const defaultImg =\n    'https://ronaldmottram.co.nz/wp-content/uploads/2019/01/default-user-icon-8.jpg';\n\n  useEffect(() => {\n    if (!movie_id) {\n      return;\n    }\n    castOfMovie(movie_id);\n  }, [movie_id]);\n\n  const castOfMovie = async movie_id => {\n    if (!movie_id) {\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const { cast } = await getCastOfMovie(movie_id);\n\n      setCast(cast);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n      console.log(error.message);\n    }\n  };\n  return (\n    <Container>\n      <CastList>\n        {isLoading && (\n          <ThreeDots\n            height=\"10\"\n            width=\"300\"\n            radius=\"9\"\n            color=\"#370f9b\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        )}\n        {error && <Text>Ups... Something went wrong - {error}!</Text>}\n        {cast.length > 0 ? (\n          cast.map(({ profile_path, name, character }, index) => {\n            return (\n              <CastItem key={index}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : defaultImg\n                  }\n                  alt={name}\n                  width=\"100\"\n                  height=\"150\"\n                />\n                <b>{name}</b>\n                <p>\n                  Character: <span> {character}</span>\n                </p>\n              </CastItem>\n            );\n          })\n        ) : (\n          <Text>We don`t have information about a cast!</Text>\n        )}\n      </CastList>\n    </Container>\n  );\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 1200px;\n  padding: 10px 20px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  margin-top: 20px;\n  padding-left: 10px;\n  color: red;\n  font-size: 18px;\n  line-height: 1.33;\n`;\n"],"names":["API_KEY","BASE_URL3","getTrendingMovies","axios","data","getMoviesByQuery","query","getMovieById","movie_id","getCastOfMovie","getReviewsOfMovie","CastList","styled","CastItem","useParams","useState","cast","setCast","error","setError","isLoading","setIsLoading","useEffect","castOfMovie","message","console","log","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","length","map","index","profile_path","name","character","src","alt","Container","Text"],"sourceRoot":""}